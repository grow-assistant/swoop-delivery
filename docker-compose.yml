version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: golf_delivery_db
    environment:
      POSTGRES_USER: golf_user
      POSTGRES_PASSWORD: golf_pass
      POSTGRES_DB: golf_delivery
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U golf_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    container_name: golf_delivery_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  app:
    build: .
    container_name: golf_delivery_app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://golf_user:golf_pass@postgres:5432/golf_delivery
      REDIS_URL: redis://redis:6379
      ENVIRONMENT: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: uvicorn src.api.app:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker for background tasks
  celery_worker:
    build: .
    container_name: golf_delivery_worker
    environment:
      DATABASE_URL: postgresql://golf_user:golf_pass@postgres:5432/golf_delivery
      REDIS_URL: redis://redis:6379
      ENVIRONMENT: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: celery -A src.tasks.celery_app worker --loglevel=info

  # Celery Beat for scheduled tasks
  celery_beat:
    build: .
    container_name: golf_delivery_beat
    environment:
      DATABASE_URL: postgresql://golf_user:golf_pass@postgres:5432/golf_delivery
      REDIS_URL: redis://redis:6379
      ENVIRONMENT: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: celery -A src.tasks.celery_app beat --loglevel=info

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: golf_delivery_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: golf_delivery_grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: